require('dotenv').config()
const express=require('express')
const {checkSchema} =require('express-validator')
const app=express()
const cors=require('cors')
app.use(express.json())
app.use(cors())
const port=3060
const configDb=require('./Config/db')
const userCtrlr=require('./App/controllers/userController')
const bloodBankCtrlr=require('./App/controllers/bloodBankController')
const bloodInventoryCtrlr=require('./App/controllers/bloodInventoryController')
const {authenticateUser,authorizeUser}=require('./App/middlewares/auth')
const {userRegistrationValidationSchema,userLoginValidationSchema}=require('./App/validations/userValidation')
const {bloodBankValidationSchema,approvalStatusValidationSchema}=require('./App/validations/bloodBankValidations')
const bloodInventoryValidationSchema=require('./App/validations/bloodInventoryValidations')
const upload=require('./App/middlewares/multer')
configDb()
app.post('/api/users/register',checkSchema(userRegistrationValidationSchema),userCtrlr.register)
app.post('/api/users/login',checkSchema(userLoginValidationSchema),userCtrlr.login)
//ROUTES FOR BLOODBANK MODEL
app.post('/api/bloodbanks',authenticateUser,authorizeUser(['bloodbank']),upload.fields([{name:'license',maxCount:1},{name:'photos',maxCount:4}]),checkSchema(bloodBankValidationSchema),bloodBankCtrlr.create)
app.get('/api/bloodbanks/pending',authenticateUser,authorizeUser(['admin']),bloodBankCtrlr.listForApproval)
app.put('/api/bloodbanks/pending/:id',authenticateUser,authorizeUser(['admin']),checkSchema(approvalStatusValidationSchema),bloodBankCtrlr.toApprove)
app.get('/api/bloodbanks/show/:id',authenticateUser,authorizeUser(['admin','user','bloodbank']),bloodBankCtrlr.show)
app.get('/api/bloodbanks/list',authenticateUser,authorizeUser(['admin','user']),bloodBankCtrlr.listAll)
app.delete('/api/bloodbanks/remove/:id',authenticateUser,authorizeUser(['admin','bloodBank']),bloodBankCtrlr.delete)

app.post('/api/bloodinventries/:id',authenticateUser,authorizeUser(['bloodbank']),checkSchema(bloodInventoryValidationSchema),bloodInventoryCtrlr.create)
app.listen(port,()=>{
    console.log('server is running successfully on the port '+port)
})